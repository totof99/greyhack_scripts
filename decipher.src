//command: decipher
cryptools = include_lib("/lib/crypto.so")
if not cryptools then exit("Error: Missing crypto library")

if params.len != 1 or params[0] == "-h" or params[0] == "--help" then exit(command_info("decipher_usage"))

origFile = params[0]
file = get_shell.host_computer.File(origFile)
if not file then exit("decipher: can't find " + origFile)
if file.is_binary then exit("decipher: can't read " + origFile + ". Binary file")
if not file.has_permission("r") then exit("decipher: can't read file. Permission denied")
if file.get_content.len == 0 then exit("decipher: no users found")
	
lines = file.get_content.split("\n")

users = []
for line in lines
	if line.len > 0 then
		userPass = line.split(":")
		if userPass.len != 2 then 
			print("decipher: wrong syntax for " + line)
			continue
		end if
		users.push(userPass)
	end if
end for

option = 1
if users.len > 1 then
	print("Multiple users found.")
	print("0: All users")
	numLine = 1
	for user in users
		print(numLine + ": " + user[0])
		numLine = numLine + 1
	end for
	option = ""
	inputOk = false
	while( not inputOk )
		option = user_input("Select user: ").to_int
		if typeof(option) != "number" or (option < 0 or option > lines.len) then
			print("Invalid input. Type a valid number")
		else 
			inputOk = true
		end if
	end while
end if
result = []
start = time
if option == 0 then
	for user in users
		print("Deciphering user " + user[0] + "...")
		password = cryptools.decipher(user[1])
		result.push(user[0] + " " + password)
		print("Found " + result[result.len-1])
	end for
else 
	userPass = users[option - 1]
	print("Deciphering user " + userPass[0] + "...")
	password = cryptools.decipher(userPass[1])
	result.push(userPass[0] + " " + password)
end if
print("Elapsed time: " + str(time-start) + "s")
print(format_columns(result.join("\n")))
