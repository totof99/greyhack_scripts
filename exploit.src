//command: exploit
if params.len < 3 or params.len > 4 or params[0] == "-h" or params[0] == "--help" then 
	if params.len < 3 then print("Too few arguments: " + params.len)
	if params.len > 4 then print("Too many arguments: " + params.len)
	exit("Exploit local or remote library.\nUsage: exploit [address]:[port] [memory] [exploit] ([exploit_value])\n       exploit [library_path] [memory] [exploit] ([exploit_value])")
end if
metaxploit = include_lib("/lib/metaxploit.so")
if not metaxploit then 
	metaxploit = include_lib(current_path + "/metaxploit.so")
	if not metaxploit then exit("Could not find metaxploit.so.")
end if

readFile = function(comp, path)
	file = comp.File(path)
	if file then 
		return file.get_content
	else
		print("Cannot open " + path)
		return null
	end if
end function
readAllUserFile = function(comp, file)
	users = result.File("/home").get_folders
	total = ""
	for user in users
		if user.name == "guest" then continue
		content = readFile(result, user.path + "/" + file)
		if content then total = total + content + "\n"
	end for
	return total
end function
explore = function(currentFile)
	fix_path = function(dirpath, filename)
		if dirpath != "/" then
			return dirpath + "/" + filename
		else
			return "/" + filename
		end if
	end function
	printContent = function(file)
		if file.is_folder then
			elts = file.get_folders + file.get_files
			for elt in elts
				type = ""
				if elt.is_folder then 
				   type = "d"
				else 
					type = "-"
				end if
				print(type + elt.permissions + " " + elt.owner + " " + elt.group + " " + elt.name)	
			end for
		else if file.is_binary then
			print("Cannot open binary file: " + file.path)
		else
			print(file.get_content)
		end if
	end function
	shouldExit2 = false
	printContent(currentFile)
	while not shouldExit2
		input2 = user_input(currentFile.path + "\n>$")
		if input2 == "exit" then 
			shouldExit2 = true
		else if slice(input2, 0, 3) == "cd " then
			newDst = null
			if input2[3:] == ".." then
				newDst = currentFile.parent
			else
				newDstName = input2[3:]
				if currentFile.is_folder then
					for f in currentFile.get_folders
						if f.name == newDstName then
							newDst = f
							break
						end if
					end for
				end if
			end if
			if not newDst then
				print("Cannot cd " + input2[3:])
			else if not newDst.is_folder then 
				print("Cannot cd a file : " + newDst.path)
			else
				currentFile = newDst
				printContent(currentFile)
			end if
		else if slice(input2, 0, 4) == "cat " then
			newDstName = input2[4:]
			if currentFile.is_folder then
				for f in currentFile.get_files
					if f.name == newDstName then
						newDst = f
						break
					end if
				end for
			end if
			if not newDst then
				print("Cannot cat " + input2[4:])
			else if newDst.is_folder then 
				print("Cannot cat a folder : " + newDst.path)
			else
				printContent(newDst)
			end if
		else if slice(input2, 0, 2) == "ls" then
			printContent(currentFile)
		else 
			print("Unknown command: " + input2)
			printContent(currentFile)
		end if
	end while
end function

print("Opening lib at " + params[0])
targetlib = null
is_adress = params[0].indexOf(":")
if is_adress then
	address = slice(params[0], 0, is_adress)
	port = slice(params[0], is_adress+1).to_int
	if not port isa number then exit("Port is not a number in " + params[0])
	session = metaxploit.net_use(address, port)
	targetlib = session.dump_lib
else
	targetlib = metaxploit.load(params[0])
end if
	
if targetlib then
	memory = params[1]
	exploit = params[2]
	value = ""
	if params.len > 3 then value = params[3]
	print("Found library: " + targetlib.lib_name + " " + targetlib.version)
	print("Using exploit " + exploit + " at " + memory)
	result = targetlib.overflow(memory, exploit, value)
	print("Type: " + typeof(result))
	if typeof(result) == "shell" then
		input = user_input("Input o to open terminal:")
		if input == "o" then result.start_terminal
	else if typeof(result) == "file" then
		if result.is_folder then
			print("Got access to directory " + result.path)
			explore(result)
		else if result.is_binary then 
			print("Got access to binary file " + result.path)
		else
			print("Got access to file " + result.path)
			print(result.get_content)
		end if
	else if typeof(result) == "computer" then
		shouldExit = false
		while not shouldExit
			input = user_input("1: for /etc/passwd\n2: for all Bank.txt\n3: for all Mail.txt\n4: Explore the file system\ne: exit\n")
			if input == "1" then
				content = readFile(result, "/etc/passwd")
				if content then print("/etc/passwd:\n" + content)
			else if input == "2" then
				print(readAllUserFile(result, "Config/Bank.txt"))
			else if input == "3" then
				print(readAllUserFile(result, "Config/Mail.txt"))
			else if input == "4" then
				explore(result.File("/"))
			else if input == "e" then
				shouldExit = true
			end if
		end while
	else
		print(result)
	end if
end if